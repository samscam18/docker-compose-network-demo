version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:alpine
    restart: always
    networks:
      - backend

  web:
    build: ./flask-app
    restart: always
    depends_on:
      - db
      - redis
    environment:
      DATABASE_HOST: db
      DATABASE_USER: user
      DATABASE_PASSWORD: password
      DATABASE_NAME: mydb
      REDIS_HOST: redis
    networks:
      - backend
    ports:
      - "5000:5000"   # expose Flask app port if needed

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - backend
      - frontend

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - backend

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - backend
  


volumes:
  pgdata:
  grafana-data:

networks:
  frontend:
  backend:

